version: 2
jobs:
  checkout_code:
    docker:
      - image: circleci/elixir:1.4.2
    working_directory: /home/circleci/tmp
    steps:
      - checkout
      - run:
          name: Debug Workspace
          command: pwd && ls -lta
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - run:
          name: Debug Workspace
          command: pwd && ls -lta
      - save_cache:
          key: code-{{ checksum ".circle-sha" }}
          paths:
            - ~/tmp

  get_dependencies:
    docker:
      - image: circleci/elixir:1.4.2
    working_directory: /home/circleci/tmp
    steps:
      - run:
          name: Debug Workspace
          command: pwd && ls -lta
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - run:
          name: Debug Workspace
          command: pwd && ls -lta
      - restore_cache:
          keys:
            - code-{{ checksum ".circle-sha" }}
      - restore_cache:
          keys:
            - deps-{{ checksum "mix.lock" }}
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - run:
          name: Restore Dependencies
          command:  mix deps.get
      - save_cache:
          key: deps-{{ checksum "mix.lock" }}
          paths:
            - ~/tmp/deps
            - ~/.mix

  compile_code:
    docker:
      - image: circleci/elixir:1.4.2
    working_directory: /home/circleci/tmp
    steps:
      - run:
          name: Debug Workspace
          command: pwd && ls -lta
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - run:
          name: Debug Workspace
          command: pwd && ls -lta
      - restore_cache:
          keys:
            - code-{{ checksum ".circle-sha" }}
      - restore_cache:
          keys:
            - deps-{{ checksum "mix.lock" }}
      - run:
          name: Compile Code
          command: MIX_ENV=prod mix compile
      - save_cache:
          key: build-{{ checksum ".circle-sha" }}
          paths:
            - ~/tmp/_build

  run_tests:
    docker:
      - image: circleci/elixir:1.4.2
    working_directory: /home/circleci/tmp
    steps:
      - run:
          name: Debug Workspace
          command: pwd && ls -lta
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - run:
          name: Debug Workspace
          command: pwd && ls -lta
      - restore_cache:
          keys:
            - code-{{ checksum ".circle-sha" }}
      - restore_cache:
          keys:
            - deps-{{ checksum "mix.lock" }}
      - run:
          name: Run
          command: mix test

  health_metrics:
    docker:
      - image: circleci/elixir:1.4.2
    working_directory: /home/circleci/tmp
    steps:
      - run:
          name: Debug Workspace
          command: pwd && ls -lta
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - run:
          name: Debug Workspace
          command: pwd && ls -lta
      - restore_cache:
          keys:
            - code-{{ checksum ".circle-sha" }}
      - restore_cache:
          keys:
            - deps-{{ checksum "mix.lock" }}
      - run:
          name: Code Coverage
          command: mix coveralls.html
      - store_artifacts:
            path: ~/tmp/cover/excoveralls.html
            destination: code-coverage.html


  package_release:
    docker:
      - image: circleci/elixir:1.4.2
    working_directory: /home/circleci/tmp
    steps:
      - run:
          name: Debug Workspace
          command: pwd && ls -lta
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - run:
          name: Debug Workspace
          command: pwd && ls -lta
     - restore_cache:
          keys:
            - code-{{ checksum ".circle-sha" }}
      - restore_cache:
          keys:
            - deps-{{ checksum "mix.lock" }}
      - restore_cache:
          keys:
            - build-{{ checksum ".circle-sha" }}
      - run:
          name: Build Release Package
          command: MIX_ENV=prod mix release --env=prod
      - run:
          name: Copy Release to Dir
          command: mkdir ~/tmp/release && mv ~/tmp/_build/rel/programming_quotes/releases/0.0.2/programming_quotes.tar.gz ~/tmp/release/
      - store_artifacts:
            path: ~/tmp/release/programming_quotes.tar.gz
            destination: programming_quotes.tar.gz


workflows:
  version: 2
  checkout_get-deps_compile_test:
    jobs:
      - checkout_code
      - get_dependencies:
          requires:
            - checkout_code
      - compile_code:
          requires:
            - get_dependencies
      - run_tests:
          requires:
            - get_dependencies
      - health_metrics:
          requires:
            - get_dependencies
      - package_release:
          requires:
            - compile_code
